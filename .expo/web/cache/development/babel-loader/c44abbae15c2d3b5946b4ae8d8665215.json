{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { GlobalContext } from \"../../context/context\";\nexport default function LocationMapComp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(GlobalContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateArea = _useState2[0],\n      setStateArea = _useState2[1];\n\n  var food = [{\n    \"branch_name\": \"Aliabad\",\n    \"latitude\": 24.9200172,\n    \"longitude\": 67.0612345\n  }, {\n    \"branch_name\": \"Numaish chowrangi\",\n    \"latitude\": 24.8732834,\n    \"longitude\": 67.0337457\n  }, {\n    \"branch_name\": \"Saylani house phase 2\",\n    \"latitude\": 24.8278999,\n    \"longitude\": 67.0688257\n  }, {\n    \"branch_name\": \"Touheed commercial\",\n    \"latitude\": 24.8073692,\n    \"longitude\": 67.0357446\n  }, {\n    \"branch_name\": \"Sehar Commercial\",\n    \"latitude\": 24.8138924,\n    \"longitude\": 67.0677652\n  }, {\n    \"branch_name\": \"Jinnah avenue\",\n    \"latitude\": 24.8949528,\n    \"longitude\": 67.1767206\n  }, {\n    \"branch_name\": \"Johar chowrangi\",\n    \"latitude\": 24.9132328,\n    \"longitude\": 67.1246195\n  }, {\n    \"branch_name\": \"Johar chowrangi 2\",\n    \"latitude\": 24.9100704,\n    \"longitude\": 67.1208811\n  }, {\n    \"branch_name\": \"Hill park\",\n    \"latitude\": 24.8673515,\n    \"longitude\": 67.0724497\n  }];\n\n  var _useState3 = useState({\n    latitude: state.latitude,\n    longitude: state.longitude,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapRegion = _useState4[0],\n      setmapRegion = _useState4[1];\n\n  var cities1 = [[\"Aliabad\", 24.9200172, 67.0612345], [\"Numaish chowrangi\", 24.8732834, 67.0337457], [\"Saylani house phase 2\", 24.8278999, 67.0688257], [\"Touheed commercial\", 24.8073692, 67.0357446], [\"Sehar Commercial\", 24.8138924, 67.0677652], [\"Jinnah avenue\", 24.8949528, 67.1767206], [\"Johar chowrangi\", 24.9132328, 67.1246195], [\"Johar chowrangi 2\", 24.9100704, 67.1208811], [\"Hill park\", 24.8673515, 67.0724497]];\n  var cities = [{\n    lat1: 24.9200172,\n    long1: 67.0612345\n  }, {\n    lat1: 24.8732834,\n    long1: 67.0337457\n  }, {\n    lat1: 24.8278999,\n    long1: 67.0688257\n  }, {\n    lat1: 24.8073692,\n    long1: 67.0357446\n  }, {\n    lat1: 24.8138924,\n    long1: 67.0677652\n  }, {\n    lat1: 24.8949528,\n    long1: 67.1767206\n  }, {\n    lat1: 24.9132328,\n    long1: 67.1246195\n  }, {\n    lat1: 24.9100704,\n    long1: 67.1208811\n  }, {\n    lat1: 24.8673515,\n    long1: 67.0724497\n  }];\n  var cities2 = [{\n    name: \"Aliabad\",\n    lat1: 24.9200172,\n    long1: 67.0612345\n  }, {\n    name: \"Numaish chowrangi\",\n    lat1: 24.8732834,\n    long1: 67.0337457\n  }, {\n    name: \"Saylani house phase 2\",\n    lat1: 24.8278999,\n    long1: 67.0688257\n  }, {\n    name: \"Touheed commercial\",\n    lat1: 24.8073692,\n    long1: 67.0357446\n  }, {\n    name: \"Sehar Commercial\",\n    lat1: 24.8138924,\n    long1: 67.0677652\n  }, {\n    name: \"Jinnah avenue\",\n    lat1: 24.8949528,\n    long1: 67.1767206\n  }, {\n    name: \"Johar chowrangi\",\n    lat1: 24.9132328,\n    long1: 67.1246195\n  }, {\n    name: \"Johar chowrangi 2\",\n    lat1: 24.9100704,\n    long1: 67.1208811\n  }, {\n    name: \"Hill park\",\n    lat1: 24.8673515,\n    long1: 67.0724497\n  }];\n\n  function deg2rad(deg) {\n    return deg * (Math.PI / 180);\n  }\n\n  function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n    var R = 6371;\n    var dLat = deg2rad(lat2 - lat1);\n    var dLon = deg2rad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d;\n  }\n\n  function setLocationFunc() {\n    var distancedCities = cities2.map(function (item) {\n      var newItem = _objectSpread({}, item);\n\n      var result = getDistanceFromLatLonInKm(item.lat1, item.long1, mapRegion.latitude, mapRegion.longitude);\n      newItem.distance = result;\n      return newItem;\n    });\n    var minDistanceCity = distancedCities.reduce(function (prev, curr) {\n      return prev.distance < curr.distance ? prev : curr;\n    });\n\n    if (minDistanceCity) {\n      console.log(\"redirect\");\n      navigation.navigate(\"Home\");\n      dispatch({\n        type: \"NEARESTONE\",\n        payload: minDistanceCity\n      });\n      console.log(minDistanceCity);\n    } else {\n      dispatch({\n        type: \"NEARESTONE\",\n        payload: ''\n      });\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(MapView, {\n    style: styles.map,\n    region: mapRegion,\n    key: 1\n  }, React.createElement(Marker, {\n    coordinate: mapRegion,\n    title: \"Your Location\"\n  }), food.map(function (item, index) {\n    var obj = {\n      latitude: item.latitude,\n      longitude: item.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    };\n    var names = {\n      branchName: item.branch_name\n    };\n    return React.createElement(React.Fragment, null, React.createElement(Marker, {\n      coordinate: obj,\n      title: names.branchName\n    }));\n  })), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: '90%',\n      alignSelf: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Set Location\",\n    onPress: setLocationFunc\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["E:/SMIT WORK/React Native/ReactNativeDrawer/src/components/maps/location.jsx"],"names":["React","useState","useEffect","useContext","MapView","Marker","GlobalContext","LocationMapComp","navigation","state","dispatch","stateArea","setStateArea","food","latitude","longitude","latitudeDelta","longitudeDelta","mapRegion","setmapRegion","cities1","cities","lat1","long1","cities2","name","deg2rad","deg","Math","PI","getDistanceFromLatLonInKm","lon1","lat2","lon2","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","d","setLocationFunc","distancedCities","map","item","newItem","result","distance","minDistanceCity","reduce","prev","curr","console","log","navigate","type","payload","styles","container","index","obj","names","branchName","branch_name","position","top","alignSelf","justifyContent","StyleSheet","create","flex","backgroundColor","alignItems","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect , useContext } from 'react';\r\nimport MapView , {Marker} from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions, Touchable, TouchableOpacity ,Button  , Alert } from 'react-native';\r\nimport { GlobalContext } from '../../context/context';\r\n\r\n\r\nexport default function LocationMapComp({navigation}) {\r\n  let {state, dispatch} = useContext(GlobalContext);\r\n  let [stateArea , setStateArea] = useState(false)\r\n\r\n  const food = [\r\n    {\r\n        \"branch_name\": \"Aliabad\",\r\n        \"latitude\": 24.9200172,\r\n        \"longitude\": 67.0612345\r\n    },\r\n    {\r\n        \"branch_name\": \"Numaish chowrangi\",\r\n        \"latitude\": 24.8732834,\r\n        \"longitude\": 67.0337457\r\n    },\r\n    {\r\n        \"branch_name\": \"Saylani house phase 2\",\r\n        \"latitude\": 24.8278999,\r\n        \"longitude\": 67.0688257\r\n    },\r\n    {\r\n        \"branch_name\": \"Touheed commercial\",\r\n        \"latitude\": 24.8073692,\r\n        \"longitude\": 67.0357446\r\n    },\r\n    {\r\n        \"branch_name\": \"Sehar Commercial\",\r\n        \"latitude\": 24.8138924,\r\n        \"longitude\": 67.0677652\r\n    },\r\n    {\r\n        \"branch_name\": \"Jinnah avenue\",\r\n        \"latitude\": 24.8949528,\r\n        \"longitude\": 67.1767206\r\n    },\r\n    {\r\n        \"branch_name\": \"Johar chowrangi\",\r\n        \"latitude\": 24.9132328,\r\n        \"longitude\": 67.1246195\r\n    },\r\n    {\r\n        \"branch_name\": \"Johar chowrangi 2\",\r\n        \"latitude\": 24.9100704,\r\n        \"longitude\": 67.1208811\r\n    },\r\n    {\r\n        \"branch_name\": \"Hill park\",\r\n        \"latitude\": 24.8673515,\r\n        \"longitude\": 67.0724497\r\n    }\r\n]\r\n\r\n\r\n  const [mapRegion, setmapRegion] = useState({\r\n    latitude: state.latitude,\r\n    longitude: state.longitude,\r\n    latitudeDelta: 0.0922,\r\n    longitudeDelta: 0.0421,\r\n  });\r\n\r\n\r\n\r\n  const cities1 = [\r\n    [\"Aliabad\" ,24.9200172  ,67.0612345],\r\n    [\"Numaish chowrangi\" ,24.8732834 ,67.0337457 ],\r\n    [\"Saylani house phase 2\" , 24.8278999 ,67.0688257],\r\n    [\"Touheed commercial\" , 24.8073692 ,67.0357446] ,\r\n    [\"Sehar Commercial\" , 24.8138924 , 67.0677652],\r\n    [\"Jinnah avenue\" , 24.8949528 , 67.1767206],\r\n    [\"Johar chowrangi\" ,24.9132328 ,67.1246195 ],\r\n    [\"Johar chowrangi 2\" ,24.9100704 ,67.1208811],\r\n    [\"Hill park\" , 24.8673515 ,67.0724497]\r\n   ];\r\n\r\n   const cities = [\r\n    {lat1 : 24.9200172  , long1 : 67.0612345},\r\n    {lat1 : 24.8732834 ,long1 : 67.0337457 },\r\n    {lat1 : 24.8278999 ,long1 : 67.0688257},\r\n    {lat1 : 24.8073692 ,long1 : 67.0357446} ,\r\n    {lat1 : 24.8138924 ,long1 :  67.0677652},\r\n    {lat1 :  24.8949528 ,long1 :  67.1767206},\r\n    {lat1 : 24.9132328 ,long1 : 67.1246195 },\r\n    {lat1 : 24.9100704 ,long1 : 67.1208811},\r\n    {lat1 : 24.8673515 ,long1 : 67.0724497}\r\n   ];\r\n\r\n   const cities2 = [\r\n    {name : \"Aliabad\" , lat1 : 24.9200172  , long1 : 67.0612345},\r\n    {name : \"Numaish chowrangi\" ,lat1 : 24.8732834 ,long1 : 67.0337457 },\r\n    {name : \"Saylani house phase 2\" ,lat1 : 24.8278999 ,long1 : 67.0688257},\r\n    {name : \"Touheed commercial\"  ,lat1 : 24.8073692 ,long1 : 67.0357446} ,\r\n    {name : \"Sehar Commercial\" , lat1 : 24.8138924 ,long1 :  67.0677652},\r\n    {name : \"Jinnah avenue\" ,lat1 :  24.8949528 ,long1 :  67.1767206},\r\n    {name : \"Johar chowrangi\" ,lat1 : 24.9132328 ,long1 : 67.1246195 },\r\n    {name :\"Johar chowrangi 2\" ,lat1 : 24.9100704 ,long1 : 67.1208811},\r\n    {name : \"Hill park\" ,lat1 : 24.8673515 ,long1 : 67.0724497}\r\n   ];\r\n   \r\n  \r\n\r\n  //  useEffect(()=>{\r\n  //   // let nearestOne = nearestCity(state.latitude,state.longitude)\r\n        \r\n  //     if(nearestOne){\r\n  //       dispatch({type : \"NEARESTONE\" , payload : {nearestOne}})\r\n  //       // setTimeout(()=>{\r\n  //         console.log(\"redirect\")\r\n  //         navigation.navigate(\"Home\")\r\n  //       // },2000)\r\n  //       setStateArea(false)\r\n        \r\n  //     }else{\r\n  //       dispatch({type : \"NEARESTONE\" , payload : ''})\r\n  //     }\r\n      \r\n  \r\n  //  },[])\r\n\r\n    \r\n  function deg2rad(deg) {\r\n    return deg * (Math.PI/180)\r\n  }\r\n\r\n  function getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = deg2rad(lat2-lat1);  // deg2rad below\r\n    var dLon = deg2rad(lon2-lon1); \r\n    var a = \r\n      Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \r\n      Math.sin(dLon/2) * Math.sin(dLon/2)\r\n      ; \r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n    var d = R * c; // Distance in km\r\n    return d;\r\n  }\r\n\r\n  // useEffect(()=>{\r\n  //   let distances = [];\r\n  //   for(let i = 0; i < cities.length ; i++ ){\r\n  //    let result = getDistanceFromLatLonInKm(cities[i].lat1 , cities[i].long1 , mapRegion.latitude , mapRegion.longitude );\r\n  //    console.log(distances)\r\n  //    distances.push(result)\r\n  //    console.log(Math.min(...distances))\r\n  //    console.log(result.length)\r\n  //   }\r\n  // },[])\r\n\r\n// useEffect(()=>{\r\n//   let distancedCities = cities2.map((item)=>{\r\n//     let newItem = {...item}\r\n//     let result = getDistanceFromLatLonInKm(item.lat1 , item.long1 , mapRegion.latitude , mapRegion.longitude );\r\n//     newItem.distance = result\r\n//     return newItem\r\n//   })\r\n  \r\n//   let minDistanceCity = distancedCities.reduce(function(prev, curr) {\r\n//     return prev.distance < curr.distance ? prev : curr;\r\n// });\r\n\r\n//       if(minDistanceCity){\r\n//         console.log(\"redirect\")\r\n//         navigation.navigate(\"Home\")\r\n//         dispatch({type : \"NEARESTONE\" , payload : minDistanceCity})\r\n//         // setTimeout(()=>{\r\n\r\n//         // },2000)\r\n//       //  setTimeout(() => {\r\n//         // setStateArea(false) \r\n//       //  }, 2000);\r\n//         console.log(stateArea , \"redirection\")\r\n//       }else{\r\n//         dispatch({type : \"NEARESTONE\" , payload : ''})\r\n//       }\r\n\r\n// },[state.type])\r\n\r\nfunction setLocationFunc(){\r\n  let distancedCities = cities2.map((item)=>{\r\n    let newItem = {...item}\r\n    let result = getDistanceFromLatLonInKm(item.lat1 , item.long1 , mapRegion.latitude , mapRegion.longitude );\r\n    newItem.distance = result\r\n    return newItem\r\n  })\r\n  \r\nlet minDistanceCity = distancedCities.reduce(function(prev, curr) {\r\n    return prev.distance < curr.distance ? prev : curr;\r\n});\r\n\r\n      if(minDistanceCity){\r\n        console.log(\"redirect\")\r\n        navigation.navigate(\"Home\")\r\n        dispatch({type : \"NEARESTONE\" , payload : minDistanceCity})\r\n        console.log(minDistanceCity)\r\n      }else{\r\n        dispatch({type : \"NEARESTONE\" , payload : ''})\r\n      }\r\n}\r\n\r\n   \r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n    \r\n      <MapView style={styles.map} region={mapRegion} key={1} >\r\n        <Marker coordinate={mapRegion}  title='Your Location' />\r\n        {\r\n          food.map((item , index)=>{\r\n            let obj = {\r\n              latitude: item.latitude,\r\n              longitude:  item.longitude,\r\n              latitudeDelta: 0.0922,\r\n              longitudeDelta: 0.0421,\r\n            }\r\n            let names = {\r\n              branchName : item.branch_name\r\n            }\r\n            return (\r\n              <>\r\n                <Marker coordinate={obj}  title={names.branchName}  />\r\n                \r\n              </>\r\n            )\r\n          })\r\n        }\r\n      </MapView>\r\n      <View\r\n        style={{\r\n            position: 'absolute',//use absolute position to show button on top of the map\r\n            top: '90%', //for center align\r\n            alignSelf: 'center',\r\n            justifyContent : 'center' //for align to right\r\n        }}\r\n    >\r\n        <Button title='Set Location' onPress={setLocationFunc} />\r\n    </View>\r\n    </View>\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  map: {\r\n    width: Dimensions.get('window').width,\r\n    height: Dimensions.get('window').height,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}