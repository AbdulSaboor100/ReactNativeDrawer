{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport MainLogin from \"../Screens/login/login\";\nimport SignUpPublic from \"../Screens/public-sign-up/sign\";\nimport MainHome from \"../Screens/home/home\";\nimport { auth, onAuthStateChanged, doc, getDoc, db, collection, onSnapshot } from \"../configs/firebase\";\nimport { GlobalContext } from \"../context/context\";\nimport locationMap from \"../components/maps/location\";\nimport Pending from \"../Screens/pending/pending\";\nimport Approved from \"../Screens/approved/approved\";\nimport BranchManager from \"../Screens/branch-manager/branch-manager\";\nimport Logout from \"../Screens/logout/logout\";\nimport LocationMapComp from \"../components/maps/location\";\nimport SerialNumber from \"../Screens/serial-number/serial-number\";\nimport QrCode from \"../Screens/qr-code/qr-code\";\nimport Scanner from \"../Screens/scanner/scanner\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nfunction App() {\n  var _React$useContext = React.useContext(GlobalContext),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userData = _React$useState2[0],\n      setUserData = _React$useState2[1];\n\n  React.useEffect(function () {\n    onAuthStateChanged(auth, function _callee(user) {\n      var userRef, userSaved, userDetails, publicApplicationsRef, approvedApplications, approvedApplications1;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!user) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.prev = 1;\n              userRef = doc(db, \"users\", user.uid);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getDoc(userRef));\n\n            case 5:\n              userSaved = _context.sent;\n              userDetails = userSaved.data();\n              dispatch({\n                type: \"ACTIVE_USER\",\n                payload: userDetails\n              });\n              publicApplicationsRef = doc(db, \"publcApplicaitons\", user.uid);\n              onSnapshot(publicApplicationsRef, function (data) {\n                dispatch({\n                  type: \"publicApplications\",\n                  payload: data.data()\n                });\n              });\n              approvedApplications = doc(db, \"approvedApplications\", user.uid);\n              onSnapshot(approvedApplications, function (data) {\n                dispatch({\n                  type: \"ApprovedApplication\",\n                  payload: data.data()\n                });\n                console.log(data.data());\n              });\n              approvedApplications1 = collection(db, \"approvedApplications\");\n              onSnapshot(approvedApplications1, function (data) {\n                data.docChanges().forEach(function (changes) {\n                  dispatch({\n                    type: \"ALLAPPROVEDAPPLICATIONS\",\n                    payload: changes.doc.data()\n                  });\n                });\n              });\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0, \"error\");\n\n            case 19:\n              setUserData(user);\n              _context.next = 24;\n              break;\n\n            case 22:\n              setUserData('');\n              console.log(\"user not found\");\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 16]], Promise);\n    });\n  }, []);\n  return React.createElement(NavigationContainer, null, React.createElement(Drawer.Navigator, null, userData ? React.createElement(React.Fragment, null, state.activeUser.role === \"public\" ? state.approvedApplication ? React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"Approved\",\n    component: Approved\n  }), React.createElement(Drawer.Screen, {\n    name: \"logout\",\n    component: Logout\n  })) : React.createElement(React.Fragment, null, state.publicApplications ? React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"Approved\",\n    component: Approved\n  }), React.createElement(Drawer.Screen, {\n    name: \"logout\",\n    component: Logout\n  })) : React.createElement(React.Fragment, null, state != null && state.nearestOne ? React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: MainHome\n  }), React.createElement(Drawer.Screen, {\n    name: \"logout\",\n    component: Logout\n  })) : React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: MainHome\n  }), React.createElement(Drawer.Screen, {\n    name: \"Locations\",\n    component: LocationMapComp\n  }), React.createElement(Drawer.Screen, {\n    name: \"logout\",\n    component: Logout\n  })))) : React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"branchManager\",\n    component: BranchManager\n  }), React.createElement(Drawer.Screen, {\n    name: \"serialNumber\",\n    component: SerialNumber\n  }), React.createElement(Drawer.Screen, {\n    name: \"Scanner\",\n    component: Scanner\n  }), React.createElement(Drawer.Screen, {\n    name: \"logout\",\n    component: Logout\n  }))) : React.createElement(React.Fragment, null, React.createElement(Drawer.Screen, {\n    name: \"Login\",\n    component: MainLogin\n  }), React.createElement(Drawer.Screen, {\n    name: \"Sign-up\",\n    component: SignUpPublic\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/SMIT WORK/React Native/ReactNativeDrawer/src/navigation/routes.js"],"names":["React","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","MainLogin","SignUpPublic","MainHome","auth","onAuthStateChanged","doc","getDoc","db","collection","onSnapshot","GlobalContext","locationMap","Pending","Approved","BranchManager","Logout","LocationMapComp","SerialNumber","QrCode","Scanner","Stack","Drawer","App","useContext","state","dispatch","useState","userData","setUserData","useEffect","user","userRef","uid","userSaved","userDetails","data","type","payload","publicApplicationsRef","approvedApplications","console","log","approvedApplications1","docChanges","forEach","changes","activeUser","role","approvedApplication","publicApplications","nearestOne"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport MainLogin from '../Screens/login/login';\r\nimport SignUpPublic from '../Screens/public-sign-up/sign';\r\nimport MainHome from '../Screens/home/home';\r\nimport { auth , onAuthStateChanged  , doc , getDoc , db , collection , onSnapshot } from '../configs/firebase';\r\nimport { GlobalContext } from '../context/context';\r\nimport locationMap from '../components/maps/location';\r\nimport Pending from '../Screens/pending/pending';\r\nimport Approved from '../Screens/approved/approved';\r\nimport BranchManager from '../Screens/branch-manager/branch-manager';\r\nimport Logout from '../Screens/logout/logout';\r\nimport LocationMapComp from '../components/maps/location';\r\nimport SerialNumber from '../Screens/serial-number/serial-number';\r\nimport QrCode from '../Screens/qr-code/qr-code';\r\nimport Scanner from '../Screens/scanner/scanner';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction App() {\r\n  let {state , dispatch}= React.useContext(GlobalContext);\r\n  let [userData , setUserData] = React.useState()\r\n  React.useEffect(()=>{\r\n    onAuthStateChanged(auth, async (user)=>{\r\n      if(user){\r\n        // console.log(user, \"user Found\");\r\n        try {\r\n          let userRef = doc(db,\"users\" , user.uid)\r\n          let userSaved = await getDoc(userRef)\r\n          let userDetails = userSaved.data()\r\n          dispatch({type : \"ACTIVE_USER\" , payload : userDetails})\r\n\r\n          let publicApplicationsRef = doc(db, \"publcApplicaitons\" , user.uid)\r\n          onSnapshot(publicApplicationsRef ,(data)=>{\r\n            dispatch({type : \"publicApplications\" , payload : data.data()})\r\n          })\r\n\r\n          // let getApplication = await getDoc(publicApplicationsRef)\r\n          // dispatch({type : \"publicApplications\" , payload : getApplication.data()})\r\n\r\n          let approvedApplications = doc(db,\"approvedApplications\" , user.uid)\r\n          onSnapshot(approvedApplications ,(data)=>{\r\n            dispatch({type : \"ApprovedApplication\" , payload : data.data()})\r\n            console.log(data.data())\r\n          })\r\n\r\n\r\n          let approvedApplications1 = collection(db,\"approvedApplications\")\r\n          onSnapshot(approvedApplications1 ,(data)=>{\r\n           data.docChanges().forEach((changes)=>{\r\n             dispatch({type : \"ALLAPPROVEDAPPLICATIONS\" , payload : changes.doc.data()})\r\n           })\r\n          })\r\n\r\n        } catch (error) {\r\n          console.log(error, \"error\")\r\n        }\r\n        setUserData(user)\r\n      }else{\r\n        setUserData('')\r\n        console.log(\"user not found\")\r\n      }\r\n    })\r\n  },[])\r\n  return (\r\n    <NavigationContainer>\r\n      <Drawer.Navigator>\r\n      \r\n      {\r\n        userData ? (\r\n          <>\r\n         {\r\n           state.activeUser.role === \"public\" ? (\r\n            state.approvedApplication  ? (\r\n              <>\r\n              <Drawer.Screen name=\"Approved\" component={Approved} />\r\n              {/* <Drawer.Screen name=\"QrCode\" component={QrCode} /> */}\r\n              <Drawer.Screen name=\"logout\" component={Logout} />\r\n              \r\n              </>\r\n            ) : (\r\n              <>\r\n              {\r\n                state.publicApplications ? (\r\n                  <>\r\n                    \r\n                    <Drawer.Screen name=\"Approved\" component={Approved} />\r\n                    <Drawer.Screen name=\"logout\" component={Logout} />  \r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\r\n                      state?.nearestOne ? (\r\n                        <>\r\n                        <Drawer.Screen name=\"Home\" component={MainHome} />\r\n                        <Drawer.Screen name=\"logout\" component={Logout} />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                        <Drawer.Screen name=\"Home\" component={MainHome} />\r\n                        <Drawer.Screen name=\"Locations\" component={LocationMapComp} />  \r\n                        <Drawer.Screen name=\"logout\" component={Logout} />\r\n                        </>\r\n                      )\r\n                    }\r\n                       \r\n                  </>\r\n                )\r\n              }\r\n                  \r\n              \r\n              </>\r\n            )\r\n           ) : (\r\n             <>\r\n                <Drawer.Screen name=\"branchManager\" component={BranchManager} />\r\n                <Drawer.Screen name=\"serialNumber\" component={SerialNumber} />\r\n                <Drawer.Screen name=\"Scanner\" component={Scanner} />\r\n                <Drawer.Screen name=\"logout\" component={Logout} />\r\n                \r\n             </>\r\n            \r\n           )\r\n         }\r\n          \r\n          </>\r\n        ) : (\r\n          <>\r\n            <Drawer.Screen name=\"Login\"  component={MainLogin} />\r\n            <Drawer.Screen name=\"Sign-up\" component={SignUpPublic} />\r\n          </>\r\n        )\r\n      }\r\n      </Drawer.Navigator>\r\n\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}